name: Deploy or Destroy

on:
  workflow_dispatch:
    inputs:
      destroy_flag:
        description: 'Flag to trigger destroy'
        required: true
        default: "false"

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Passo 1: Checkout do c√≥digo
      - name: Checkout code
        uses: actions/checkout@v2

      # Passo 2: Configurar as credenciais da AWS
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ secrets.AWS_REGION }}

      # Passo 3: Instalar o Terraform
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1

      # Passo 4: Inicializar o Terraform com o backend remoto
      - name: Initialize Terraform
        run: terraform init

      # Passo 5: Aplicar ou Destruir a Infraestrutura
      - name: Apply or Destroy Terraform
        run: |
          if [ "${{ github.event.inputs.destroy_flag }}" == "true" ]; then
            terraform destroy -auto-approve \
              -var "products_db_name=${{ secrets.PRODUCTS_DB_NAME }}" \
              -var "products_db_username=${{ secrets.PRODUCTS_DB_USERNAME }}" \
              -var "products_db_password=${{ secrets.PRODUCTS_DB_PASSWORD }}" \
              -var "customer_db_name=${{ secrets.CUSTOMER_DB_NAME }}" \
              -var "customer_db_username=${{ secrets.CUSTOMER_DB_USERNAME }}" \
              -var "customer_db_password=${{ secrets.CUSTOMER_DB_PASSWORD }}" \
              -var "order_db_name=${{ secrets.ORDER_DB_NAME }}" \
              -var "order_db_username=${{ secrets.ORDER_DB_USERNAME }}" \
              -var "order_db_password=${{ secrets.ORDER_DB_PASSWORD }}" 
          else
            terraform apply -auto-approve \
              -var "products_db_name=${{ secrets.PRODUCTS_DB_NAME }}" \
              -var "products_db_username=${{ secrets.PRODUCTS_DB_USERNAME }}" \
              -var "products_db_password=${{ secrets.PRODUCTS_DB_PASSWORD }}" \
              -var "customer_db_name=${{ secrets.CUSTOMER_DB_NAME }}" \
              -var "customer_db_username=${{ secrets.CUSTOMER_DB_USERNAME }}" \
              -var "customer_db_password=${{ secrets.CUSTOMER_DB_PASSWORD }}" \
              -var "order_db_name=${{ secrets.ORDER_DB_NAME }}" \
              -var "order_db_username=${{ secrets.ORDER_DB_USERNAME }}" \
              -var "order_db_password=${{ secrets.ORDER_DB_PASSWORD }}" 
          fi